<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.emiary.dao.GraphDAO">

	<select id="countDiaryForGraph" parameterType="String" resultType="Graph">
		select to_char(created_at, 'FMyyyy-mm') as yearAndMonth, count(to_char(created_at, 'yymm')) as countPerMonth
		from diaries
		where email = #{username}
		group by to_char(created_at, 'FMyyyy-mm')
		order by yearAndMonth
	</select>

	<select id="lineFunction" parameterType="map" resultType="Graph">
		select TO_CHAR(diaries.created_at, 'yyyy-mm-dd') AS YEARANDMONTHANDDAY, emotionscore
		from diaries
		where email = #{username}
		  and extract(year from created_at) = #{presentYear} and extract(month from created_at) = #{presentMonth} and emotionscore != 10
		order by created_at
	</select>

	<select id="monthlyLineFunction" parameterType="map" resultType="Graph">
		select to_char(created_at, 'yyyy-mm') as yearAndMonth, trunc(avg(emotionscore), 2) as emotionscore
		from diaries
		where email = #{username} and extract(year from created_at) = #{presentYear}
		group by to_char(created_at, 'yyyy-mm')
		order by yearAndMonth
	</select>

	<select id="radarFunction" parameterType="map" resultType="Graph">
		select nameOfDay, sum(diarycount) as resultOfSum
		from(
				SELECT
					CASE
						WHEN emotionscore BETWEEN -2 AND -1.2 THEN 'disaster'
						WHEN emotionscore BETWEEN -1.2 AND -0.5 THEN 'badDay'
						WHEN emotionscore BETWEEN -0.5 AND 0.1 THEN 'okayDay'
						WHEN emotionscore BETWEEN 0.1 AND 1.0 THEN 'goodDay'
						WHEN emotionscore BETWEEN 1.0 AND 2.0 THEN 'bestDay'
						ELSE 'notCalculated'
						END AS nameOfDay,
					COUNT(*) AS DiaryCount
				FROM diaries
				where email = #{username} and extract(month from created_at) = #{presentMonth}
				GROUP BY emotionscore
			)
		group by nameOfDay
	</select>

</mapper>

